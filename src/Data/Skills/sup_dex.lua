-- This file is automatically generated, do not edit!
-- Path of Building
--
-- Dexterity support gems
-- Skill data (c) Grinding Gear Games
--
local skills, mod, flag, skill = ...

skills["SupportAddedColdDamage"] = {
	name = "SupportAddedColdDamage",
	hidden = true,
	color = 2,
	baseEffectiveness = 0.57270002365112,
	incrementalEffectiveness = 0.03770000115037,
	support = true,
	requireSkillTypes = { SkillType.Attack, SkillType.Hit, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportAddedColdDamagePlus"] = {
	name = "SupportAddedColdDamagePlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Attack, SkillType.Hit, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportAddedColdDamage",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["supported_cold_skill_gem_level_+"] = {
			mod("SupportedGemProperty", "LIST", { keyword = "active_skill", key = "level", value = nil }, 0, 0, { type = "SkillType", skillType = SkillType.ColdSkill }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportAdditionalAccuracy"] = {
	name = "SupportAdditionalAccuracy",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Attack, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["attack_damage_+%_per_1000_accuracy_rating"] = {
			mod("Damage", "INC", nil, ModFlag.Attack, 0, { type = "PerStat", div = 1000, stat = "Accuracy"})
		}
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportArrowNova"] = {
	name = "SupportArrowNova",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.MinionProjectile, SkillType.OR, SkillType.ProjectileAttack, SkillType.AnimateWeapon, SkillType.OR, SkillType.AND, SkillType.SkillCanVolley, SkillType.AND, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Channelled, SkillType.CreatesMinion, SkillType.FiresProjectilesFromSecondaryLocation, },
	ignoreMinionTypes = true,
	weaponTypes = {
		["Bow"] = true,
	},
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_rain_projectile_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportArrowNovaPlus"] = {
	name = "SupportArrowNovaPlus",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.MinionProjectile, SkillType.OR, SkillType.ProjectileAttack, SkillType.AnimateWeapon, SkillType.OR, SkillType.AND, SkillType.SkillCanVolley, SkillType.AND, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Channelled, SkillType.CreatesMinion, SkillType.FiresProjectilesFromSecondaryLocation, },
	ignoreMinionTypes = true,
	plusVersionOf = "SupportArrowNova",
	weaponTypes = {
		["Bow"] = true,
	},
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_rain_projectile_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBarrage"] = {
	name = "Barrage Support",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.MinionProjectile, SkillType.OR, SkillType.Type73, SkillType.OR, SkillType.ProjectileAttack, SkillType.AnimateWeapon, SkillType.OR, SkillType.AND, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Channelled, SkillType.CreatesMinion, SkillType.Triggered, SkillType.TriggeredGrantedSkill, },
	ignoreMinionTypes = true,
	weaponTypes = {
		["Wand"] = true,
		["Bow"] = true,
	},
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_barrage_damage_+%_final"] = {
			mod("Damage", "MORE", nil, 0, 0, { type = "Condition", varList = { "UsingBow", "UsingWand" }}),
		},
		["projectiles_barrage"] = {
			flag("SequentialProjectiles", { type = "Condition", varList = { "UsingBow", "UsingWand" }}),
		},
		["number_of_additional_projectiles"] = {
			mod("ProjectileCount", "BASE", nil, 0, 0, { type = "Condition", varList = { "UsingBow", "UsingWand" }}),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBlind"] = {
	name = "SupportBlind",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBlockReduction"] = {
	name = "SupportBlockReduction",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { SkillType.Duration, },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCastOnCrit"] = {
	name = "SupportCastOnCrit",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Trap, SkillType.Mine, SkillType.Totem, SkillType.ManaCostReserved, },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_cast_on_crit_quality_attack_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Attack, 0)
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCastOnCritTriggered"] = {
	name = "SupportCastOnCritTriggered",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Spell, SkillType.Triggerable, SkillType.AND, },
	addSkillTypes = { SkillType.Triggered, SkillType.SecondWindSupport, },
	excludeSkillTypes = { SkillType.Trap, SkillType.Mine, SkillType.Totem, SkillType.ManaCostReserved, SkillType.TriggeredGrantedSkill, },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_cast_on_crit_spell_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Spell),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCastOnCritPlus"] = {
	name = "SupportCastOnCritPlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Trap, SkillType.Mine, SkillType.Totem, SkillType.ManaCostReserved, },
	ignoreMinionTypes = true,
	plusVersionOf = "SupportCastOnCrit",
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCastOnCritTriggeredPlus"] = {
	name = "SupportCastOnCritTriggeredPlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Spell, SkillType.Triggerable, SkillType.AND, },
	addSkillTypes = { SkillType.Triggered, SkillType.SecondWindSupport, },
	excludeSkillTypes = { SkillType.Trap, SkillType.Mine, SkillType.Totem, SkillType.ManaCostReserved, SkillType.TriggeredGrantedSkill, },
	ignoreMinionTypes = true,
	plusVersionOf = "SupportCastOnCritTriggered",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_cast_on_crit_spell_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Spell),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCastOnDeath"] = {
	name = "SupportCastOnDeath",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Spell, SkillType.Triggerable, SkillType.AND, },
	addSkillTypes = { SkillType.Triggered, },
	excludeSkillTypes = { SkillType.Minion, SkillType.Trap, SkillType.Mine, SkillType.Totem, SkillType.Aura, SkillType.TriggeredGrantedSkill, },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["area_of_effect_+%_while_dead"] = {
			mod("AreaOfEffect", "INC", nil),
		},
		["cast_on_death_damage_+%_final_while_dead"] = {
			mod("Damage", "MORE", nil),
		},
		["additional_critical_strike_chance_permyriad_while_dead"] = {
			mod("CritChance", "BASE", nil),
			div = 100
		},
		["skill_effect_duration_+%_while_dead"] = {
			mod("Duration", "INC", nil),
		},
	},
	baseMods = {
		skill("triggeredOnDeath", true),
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportChain"] = {
	name = "SupportChain",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Chaining, SkillType.Projectile, SkillType.MinionProjectile, SkillType.AnimateWeapon, SkillType.Type97, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_chain_hit_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Hit),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportChainPlus"] = {
	name = "SupportChainPlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Chaining, SkillType.Projectile, SkillType.MinionProjectile, SkillType.AnimateWeapon, SkillType.Type97, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportChain",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_chain_hit_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Hit),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportChanceToFlee"] = {
	name = "SupportChanceToFlee",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Attack, SkillType.Hit, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportGemFrenzyPowerOnTrapTrigger"] = {
	name = "SupportGemFrenzyPowerOnTrapTrigger",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Trap, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["trap_trigger_radius_"] = {
			mod("TrapTriggerAreaOfEffect", "INC", nil, 0, 0, { type = "Multiplier", var = "PowerCharge" } )
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportSlashingWeapon"] = {
	name = "SupportSlashingWeapon",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Melee, },
	addSkillTypes = { SkillType.Duration, SkillType.Buff, },
	excludeSkillTypes = { SkillType.CreatesMinion, },
	ignoreMinionTypes = true,
	weaponTypes = {
		["Two Handed Axe"] = true,
		["Thrusting One Handed Sword"] = true,
		["One Handed Axe"] = true,
		["Two Handed Sword"] = true,
		["One Handed Sword"] = true,
	},
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_slashing_damage_+%_final_from_distance"] = {
			mod("Damage", "MORE", nil, bit.bor(ModFlag.Attack, ModFlag.Melee), 0, { type = "MeleeProximity", ramp = {1,0} }),
		},
		["support_slashing_buff_attack_cast_speed_+%_final_to_grant"] = {
			mod("Speed", "MORE", nil, 0, 0, { type = "GlobalEffect", effectType = "Buff", effectName = "Combat Rush", effectCond = "CombatRushActive" }, { type = "Condition", var = "SupportedByCloseCombat", neg = true }, { type = "SkillType", skillType = SkillType.TravelSkill }),
		},
		["close_combat_damage_to_close_range_+%"] = {
			mod("Damage", "INC", nil, bit.bor(ModFlag.Attack, ModFlag.Melee), 0, { type = "Condition", var = "AtCloseRange" }),
		},
		["combat_rush_effect_+%"] = {
			mod("CombatRushEffect", "INC", nil),
		},
	},
	baseMods = {
		flag("Condition:SupportedByCloseCombat"),
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportClusterTrap"] = {
	name = "SupportClusterTrap",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Trap, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_clustertrap_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportColdPenetration"] = {
	name = "SupportColdPenetration",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportColdPenetrationPlus"] = {
	name = "SupportColdPenetrationPlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportColdPenetration",
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCullingStrike"] = {
	name = "SupportCullingStrike",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportDeadlyAilments"] = {
	name = "SupportDeadlyAilments",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_better_ailments_hit_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Hit),
		},
		["support_better_ailments_ailment_damage_+%_final"] = {
			mod("Damage", "MORE", nil, 0, bit.bor(KeywordFlag.Bleed, KeywordFlag.Poison, KeywordFlag.Ignite)),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportDeadlyAilmentsPlus"] = {
	name = "SupportDeadlyAilmentsPlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportDeadlyAilments",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_better_ailments_hit_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Hit),
		},
		["support_better_ailments_ailment_damage_+%_final"] = {
			mod("Damage", "MORE", nil, 0, bit.bor(KeywordFlag.Bleed, KeywordFlag.Poison, KeywordFlag.Ignite)),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportAdditionalQuality"] = {
	name = "SupportAdditionalQuality",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { },
	addSkillTypes = { },
	excludeSkillTypes = { },
	supportGemsOnly = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["supported_active_skill_gem_quality_%"] = {
			mod("SupportedGemProperty", "LIST", { keyword = "active_skill", key = "quality", value = nil }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportFasterAttack"] = {
	name = "SupportFasterAttack",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Attack, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportFasterProjectiles"] = {
	name = "SupportFasterProjectiles",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.ProjectileDamage, SkillType.MinionProjectile, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Type51, },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportFocusedBallista"] = {
	name = "SupportFocusedBallista",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.ProjectileAttack, SkillType.Totem, SkillType.AND, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_focused_ballista_totem_attack_speed_+%_final"] = {
			mod("Speed", "MORE", nil, ModFlag.Attack),
		},
		["support_focused_ballista_totem_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportFork"] = {
	name = "SupportFork",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.MinionProjectile, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_fork_projectile_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportForkPlus"] = {
	name = "SupportForkPlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.MinionProjectile, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportFork",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_fork_projectile_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportGreaterMultipleProjectiles"] = {
	name = "SupportGreaterMultipleProjectiles",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.MinionProjectile, SkillType.AnimateWeapon, SkillType.Type73, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_multiple_projectile_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportGreaterMultipleProjectilesPlus"] = {
	name = "SupportGreaterMultipleProjectilesPlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.MinionProjectile, SkillType.AnimateWeapon, SkillType.Type73, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportGreaterMultipleProjectiles",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_multiple_projectile_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportGreaterVolley"] = {
	name = "SupportGreaterVolley",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.SkillCanVolley, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.LaunchesSeriesOfProjectiles, SkillType.Type71, SkillType.FiresProjectilesFromSecondaryLocation, },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_greater_volley_projectile_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportDamageAgainstChilled"] = {
	name = "SupportDamageAgainstChilled",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, SkillType.DamageOverTime, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_hypothermia_damage_+%_vs_chilled_enemies_final"] = {
			mod("Damage", "MORE", nil, 0, bit.bor(KeywordFlag.Hit, KeywordFlag.Ailment), { type = "ActorCondition", actor = "enemy", var = "Chilled" }),
		},
		["support_hypothermia_cold_damage_over_time_+%_final"] = {
			mod("ColdDamage", "MORE", nil, 0, KeywordFlag.ColdDot),
		},
		["freeze_applies_cold_resistance_+"] = {
			mod("ColdResist", "BASE", nil, 0, 0, { type = "GlobalEffect", effectType = "Debuff" }, { type = "Condition", var = "Frozen" }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportImpale"] = {
	name = "SupportImpale",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["impale_support_physical_damage_+%_final"] = {
			mod("PhysicalDamage", "MORE", nil),
		},
		["impale_phys_reduction_%_penalty"] = {
			mod("EnemyImpalePhysicalDamageReduction", "BASE", nil),
			mult = -1,
		}
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportFrenzyChargeOnSlayingFrozenEnemy"] = {
	name = "SupportFrenzyChargeOnSlayingFrozenEnemy",
	hidden = true,
	color = 2,
	baseEffectiveness = 0.51819998025894,
	incrementalEffectiveness = 0.03770000115037,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Trap, SkillType.Mine, SkillType.Totem, },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportLesserMultipleProjectiles"] = {
	name = "SupportLesserMultipleProjectiles",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.MinionProjectile, SkillType.AnimateWeapon, SkillType.Type73, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_lesser_multiple_projectile_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportChanceToPoison"] = {
	name = "SupportChanceToPoison",
	hidden = true,
	color = 2,
	baseEffectiveness = 0.2732999920845,
	incrementalEffectiveness = 0.03999999910593,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportManaLeech"] = {
	name = "SupportManaLeech",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["damage_+%_per_200_mana_spent_recently"] = {
			mod("Damage", "INC", nil, 0, 0, {type = "Multiplier", div = 200, var = "ManaSpentRecently"})
		}
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportGemMirageArcher"] = {
	name = "SupportGemMirageArcher",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.SkillCanMirageArcher, },
	addSkillTypes = { SkillType.Duration, },
	excludeSkillTypes = { SkillType.Vaal, SkillType.Totem, SkillType.Trap, SkillType.Mine, SkillType.Minion, },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_mirage_archer_base_duration"] = {
			mod("MirageArcherDuration", "BASE", nil),
			div = 1000,
		},
		["support_mirage_archer_damage_+%_final"] = {
			mod("MirageArcherLessDamage", "BASE", nil),
		},
		["support_mirage_archer_attack_speed_+%_final"] = {
			mod("MirageArcherLessAttackSpeed", "BASE", nil),
		},
		["mirage_archer_number_of_additional_projectiles"] = {
			mod("MirageArcherAdditionalProjectileCount", "BASE", nil)
		},
		["summon_mirage_archer_on_hit"] = {
			mod("MirageArcherMaxCount", "BASE", 1),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportMultiTrap"] = {
	name = "SupportMultiTrap",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Trap, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {	
		["support_multithrow_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportPuncturingWeapon"] = {
	name = "SupportPuncturingWeapon",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.CreatesMinion, },
	ignoreMinionTypes = true,
	weaponTypes = {
		["Dagger"] = true,
		["Claw"] = true,
	},
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["elusive_effect_+%"] = {
			mod("ElusiveEffect", "INC", nil, 0, 0, { type = "GlobalEffect", effectType = "Buff", effectName = "Nightblade" }),
		},
	},	
	baseMods = {
		flag("Condition:CanBeElusive", { type = "GlobalEffect", effectType = "Buff" }),
		mod("Dummy", "DUMMY", 1, 0, 0, { type = "Condition", var = "CanBeElusive" }),
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportOnslaught"] = {
	name = "SupportOnslaught",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["attack_and_cast_speed_+%_during_onslaught"] = {
			mod("Speed", "INC", nil, 0, 0, {type = "Condition", var = "Onslaught"})
		}
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportPierce"] = {
	name = "SupportPierce",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.MinionProjectile, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_pierce_projectile_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
		["projectile_damage_+%_if_pierced_enemy"] = {
			mod("Damage", "INC", nil, ModFlag.Projectile, 0, { type = "StatThreshold", stat = "PiercedCount", threshold = 1 }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportPointBlank"] = {
	name = "SupportPointBlank",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.ProjectileAttack, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["keystone_point_blank"] = {
			flag("PointBlank"),
		},
		["knockback_chance_%_at_close_range"] = {
			mod("EnemyKnockbackChance", "BASE", nil, 0, KeywordFlag.Hit),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCriticalStrikeAffliction"] = {
	name = "SupportCriticalStrikeAffliction",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportAdditionalCooldown"] = {
	name = "SupportAdditionalCooldown",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.SecondWindSupport, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Triggered, },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportSlowerProjectiles"] = {
	name = "SupportSlowerProjectiles",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Projectile, SkillType.ProjectileDamage, SkillType.MinionProjectile, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Type51, },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_slower_projectiles_projectile_speed_+%_final"] = {
			mod("ProjectileSpeed", "MORE", nil),
		},
		["support_slower_projectiles_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
		["projectiles_damage_+%_to_nearby_targets"] = {
			mod("Damage", "INC", nil, ModFlag.Projectile)
		}
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportRapidDecay"] = {
	name = "SupportRapidDecay",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Duration, SkillType.Type55, SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_rapid_decay_damage_over_time_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Dot),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportSwiftAfflictionPlus"] = {
	name = "SupportSwiftAfflictionPlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Duration, SkillType.Type55, SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportRapidDecay",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_rapid_decay_damage_over_time_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Dot),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportAdditionalTrapMine"] = {
	name = "SupportAdditionalTrapMine",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Trap, SkillType.Mine, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportTrap"] = {
	name = "SupportTrap",
	hidden = true,
	color = 2,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.SkillCanTrap, },
	addSkillTypes = { SkillType.Trap, SkillType.ManaCostPercent, },
	excludeSkillTypes = { SkillType.TriggeredGrantedSkill, SkillType.ManaCostReserved, SkillType.Mine, SkillType.NOT, SkillType.AND, SkillType.ManaCostPercent, SkillType.NOT, SkillType.AND, },
	statDescriptionScope = "gem_stat_descriptions",
	addFlags = {
		trap = true,
	},
	statMap = {
		["base_skill_show_average_damage_instead_of_dps"] = {
			skill("showAverage", true, { type = "SkillType", skillType = SkillType.SkillCanTrap }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportTrapCooldown"] = {
	name = "SupportTrapCooldown",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Trap, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportTrapAndMineDamage"] = {
	name = "SupportTrapAndMineDamage",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Trap, SkillType.Mine, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_trap_and_mine_damage_+%_final"] = {
			mod("Damage", "MORE", nil, 0, bit.bor(KeywordFlag.Trap, KeywordFlag.Mine)),
		},
		["support_trap_and_mine_damage_mine_throwing_speed_+%_final"] = {
			mod("MineLayingSpeed", "MORE", nil),
		},
		["support_trap_and_mine_damage_trap_throwing_speed_+%_final"] = {
			mod("TrapThrowingSpeed", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportPhysicalProjectileAttackDamage"] = {
	name = "SupportPhysicalProjectileAttackDamage",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.ProjectileAttack, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_projectile_attack_speed_+%_final"] = {
			mod("Speed", "MORE", nil, bit.bor(ModFlag.Attack, ModFlag.Projectile)),
		},
		["support_projectile_attack_physical_damage_+%_final"] = {
			mod("PhysicalDamage", "MORE", nil, bit.bor(ModFlag.Attack, ModFlag.Projectile)),
		},
		["support_phys_chaos_projectile_physical_damage_over_time_+%_final"] = {
			mod("PhysicalDamage", "MORE", nil, 0, KeywordFlag.PhysicalDot),
		},
		["support_phys_chaos_projectile_chaos_damage_over_time_+%_final"] = {
			mod("ChaosDamage", "MORE", nil, 0, KeywordFlag.ChaosDot),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportViciousProjectilesPlus"] = {
	name = "SupportViciousProjectilesPlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.ProjectileAttack, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportPhysicalProjectileAttackDamage",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_projectile_attack_speed_+%_final"] = {
			mod("Speed", "MORE", nil, bit.bor(ModFlag.Attack, ModFlag.Projectile)),
		},
		["support_projectile_attack_physical_damage_+%_final"] = {
			mod("PhysicalDamage", "MORE", nil, bit.bor(ModFlag.Attack, ModFlag.Projectile)),
		},
		["support_phys_chaos_projectile_physical_damage_over_time_+%_final"] = {
			mod("PhysicalDamage", "MORE", nil, 0, KeywordFlag.PhysicalDot),
		},
		["support_phys_chaos_projectile_chaos_damage_over_time_+%_final"] = {
			mod("ChaosDamage", "MORE", nil, 0, KeywordFlag.ChaosDot),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportDebilitate"] = {
	name = "SupportDebilitate",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_debilitate_poison_damage_+%_final"] = {
			mod("Damage", "MORE", nil, 0, KeywordFlag.Poison),
		},
		["support_debilitate_hit_damage_+%_final_per_poison_stack"] = {
			mod("Damage", "MORE", nil, ModFlag.Hit, 0, { type = "Multiplier", actor = "enemy", var = "PoisonStack", limitVar = "VileToxinsPoisonLimit" }),
		},
		["support_debilitate_hit_damage_max_poison_stacks"] = {
			mod("Multiplier:VileToxinsPoisonLimit", "BASE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportVoidManipulation"] = {
	name = "SupportVoidManipulation",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, SkillType.DamageOverTime, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_void_manipulation_chaos_damage_+%_final"] = {
			mod("ChaosDamage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportVoidManipulationPlus"] = {
	name = "SupportVoidManipulationPlus",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, SkillType.DamageOverTime, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportVoidManipulation",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_void_manipulation_chaos_damage_+%_final"] = {
			mod("ChaosDamage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportParallelProjectiles"] = {
	name = "SupportParallelProjectiles",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.SkillCanVolley, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.LaunchesSeriesOfProjectiles, SkillType.Type71, SkillType.FiresProjectilesFromSecondaryLocation, },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_parallel_projectiles_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Projectile),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportChaosAttacks"] = {
	name = "SupportChaosAttacks",
	hidden = true,
	color = 2,
	support = true,
	requireSkillTypes = { SkillType.Attack, },
	addSkillTypes = { SkillType.Duration, },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}