-- This file is automatically generated, do not edit!
-- Path of Building
--
-- Strength support gems
-- Skill data (c) Grinding Gear Games
--
local skills, mod, flag, skill = ...

skills["SupportAddedFireDamage"] = {
	name = "SupportAddedFireDamage",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportAddedFireDamagePlus"] = {
	name = "SupportAddedFireDamagePlus",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportAddedFireDamage",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["supported_fire_skill_gem_level_+"] = {
			mod("SupportedGemProperty", "LIST", { keyword = "active_skill", key = "level", value = nil }, 0, 0, { type = "SkillType", skillType = SkillType.FireSkill }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportSpiritStrike"] = {
	name = "SupportSpiritStrike",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.MeleeSingleTarget, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.TriggeredGrantedSkill, SkillType.Vaal, },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_spirit_strike_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportAncestralCallPlus"] = {
	name = "SupportAncestralCallPlus",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.MeleeSingleTarget, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.TriggeredGrantedSkill, SkillType.Vaal, },
	ignoreMinionTypes = true,
	plusVersionOf = "SupportSpiritStrike",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_spirit_strike_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBehead"] = {
	name = "SupportBehead",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.MeleeSingleTarget, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_executioner_damage_vs_enemies_on_low_life_+%_final"] = {
			mod("Damage", "MORE", nil, 0, bit.bor(KeywordFlag.Hit, KeywordFlag.Ailment), { type = "ActorCondition", actor = "enemy", var = "LowLife" })
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBloodMagic"] = {
	name = "SupportBloodMagic",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.ManaCostReserved, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBloodthirst"] = {
	name = "SupportBloodthirst",
	hidden = true,
	color = 1,
	baseEffectiveness = 0.11999999731779,
	incrementalEffectiveness = 0.028000000864267,
	support = true,
	requireSkillTypes = { SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Totem, SkillType.Trap, SkillType.Mine, SkillType.Triggered, SkillType.TriggeredGrantedSkill, SkillType.CreatesMinion, },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_blood_thirst_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
		mod("PhysicalMin", "BASE", 1, ModFlag.Weapon, 0, { type = "PerStat", stat = "Life", div = 50 }, { type = "Condition", var = "LowLife"}),
		mod("PhysicalMax", "BASE", 1, ModFlag.Weapon, 0, { type = "PerStat", stat = "Life", div = 50 }, { type = "Condition", var = "LowLife"}),
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBloodlust"] = {
	name = "SupportBloodlust",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Melee, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_bloodlust_melee_physical_damage_+%_final_vs_bleeding_enemies"] = {
			mod("PhysicalDamage", "MORE", nil, ModFlag.Melee, 0, { type = "ActorCondition", actor = "enemy", var = "Bleeding" }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBrutality"] = {
	name = "SupportBrutality",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, SkillType.DamageOverTime, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_brutality_physical_damage_+%_final"] = {
			mod("PhysicalDamage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBrutalityPlus"] = {
	name = "SupportBrutalityPlus",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, SkillType.DamageOverTime, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportBrutality",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_brutality_physical_damage_+%_final"] = {
			mod("PhysicalDamage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportIncreasedBurningDamage"] = {
	name = "SupportIncreasedBurningDamage",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, SkillType.CausesBurning, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_burning_damage_+%_final"] = {
			mod("FireDamage", "MORE", nil, 0, KeywordFlag.FireDot),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBurningDamagePlus"] = {
	name = "SupportBurningDamagePlus",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, SkillType.CausesBurning, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportIncreasedBurningDamage",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_burning_damage_+%_final"] = {
			mod("FireDamage", "MORE", nil, 0, KeywordFlag.FireDot),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCastOnMeleeKill"] = {
	name = "SupportCastOnMeleeKill",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Melee, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Trap, SkillType.Mine, SkillType.Totem, SkillType.ManaCostReserved, },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCastOnMeleeKillTriggered"] = {
	name = "SupportCastOnMeleeKillTriggered",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Spell, SkillType.Triggerable, SkillType.AND, },
	addSkillTypes = { SkillType.Triggered, SkillType.SecondWindSupport, },
	excludeSkillTypes = { SkillType.Trap, SkillType.Mine, SkillType.Totem, SkillType.ManaCostReserved, SkillType.TriggeredGrantedSkill, },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_cast_on_melee_kill_spell_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Spell),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCastOnDamageTaken"] = {
	name = "SupportCastOnDamageTaken",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Spell, SkillType.Triggerable, SkillType.AND, },
	addSkillTypes = { SkillType.Triggered, SkillType.SecondWindSupport, },
	excludeSkillTypes = { SkillType.Trap, SkillType.Mine, SkillType.Totem, SkillType.Aura, SkillType.TriggeredGrantedSkill, },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["cast_on_damage_taken_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportChanceToBleed"] = {
	name = "SupportChanceToBleed",
	hidden = true,
	color = 1,
	baseEffectiveness = 0.27500000596046,
	incrementalEffectiveness = 0.028500000014901,
	support = true,
	requireSkillTypes = { SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.CreatesMinion, },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_chance_to_bleed_bleeding_damage_+%_final"] = {
			mod("Damage", "MORE", nil, 0, KeywordFlag.Bleed),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportColdToFire"] = {
	name = "SupportColdToFire",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportCruelty"] = {
	name = "SupportCruelty",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { SkillType.Duration, },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_cruelty_hit_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Hit),
		},
	},
	baseMods = {
		mod("Damage", "MORE", 1, ModFlag.Dot, 0, { type = "Multiplier", var = "Cruelty" }),
		flag("Cruelty"),
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportMeleeDamageOnFullLife"] = {
	name = "SupportMeleeDamageOnFullLife",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_damage_while_on_full_life_+%_final"] = {
			mod("Damage", "MORE", nil, 0, 0, { type = "Condition", var = "FullLife" }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportEarthbreaker"] = {
	name = "SupportEarthbreaker",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.SlamSkill, SkillType.SkillCanTotem, SkillType.AND, },
	addSkillTypes = { SkillType.Totem, },
	excludeSkillTypes = { SkillType.TriggeredGrantedSkill, },
	statDescriptionScope = "gem_stat_descriptions",
	addFlags = {
		totem = true,
	},
	statMap = {
		["support_ancestor_slam_totem_attack_speed_+%_final"] = {
			mod("Speed", "MORE", nil, ModFlag.Attack),
		},
		["support_ancestor_slam_totem_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
		["ancestor_totem_grants_owner_area_of_effect_+%_with_melee_skills"] = {
			mod("AreaOfEffect", "INC", nil, ModFlag.Melee),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportWeaponElementalDamage"] = {
	name = "SupportWeaponElementalDamage",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Attack, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_attack_skills_elemental_damage_+%_final"] = {
			mod("ElementalDamage", "MORE", nil, 0, KeywordFlag.Attack),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportWeaponElementalDamagePlus"] = {
	name = "SupportWeaponElementalDamagePlus",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Attack, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportWeaponElementalDamage",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_attack_skills_elemental_damage_+%_final"] = {
			mod("ElementalDamage", "MORE", nil, 0, KeywordFlag.Attack),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportAdditionalLevel"] = {
	name = "SupportAdditionalLevel",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { },
	addSkillTypes = { },
	excludeSkillTypes = { },
	supportGemsOnly = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["supported_active_skill_gem_level_+"] = {
			mod("SupportedGemProperty", "LIST", { keyword = "active_skill", key = "level", value = nil }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["EnduranceChargeOnMeleeStun"] = {
	name = "EnduranceChargeOnMeleeStun",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Melee, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["endurance_charge_on_melee_stun_damage_+%_final_per_endurance_charge"] = {
			mod("Damage", "MORE", nil, 0, 0, { type = "Multiplier", var = "EnduranceCharge" }),
		},
		["damage_+%_if_lost_endurance_charge_in_past_8_seconds"] = {
			mod("Damage", "INC", nil, 0, 0, { type = "Condition", var = "LostEnduranceChargeInPast8Sec" }),
		}
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportFirePenetration"] = {
	name = "SupportFirePenetration",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportFirePenetrationPlus"] = {
	name = "SupportFirePenetrationPlus",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportFirePenetration",
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["AncestralSlamSupport"] = {
	name = "AncestralSlamSupport",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.SlamSkill, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Totem, SkillType.Trap, SkillType.Mine, SkillType.UsesSupportedTriggerSkill, SkillType.Vaal, },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_ancestral_slam_big_hit_hit_damage_+%_final"] = {
			mod("FistOfWarHitMultiplier", "BASE", nil, ModFlag.Melee),
		},
		["support_ancestral_slam_big_hit_ailment_damage_+%_final"] = {
			mod("FistOfWarAilmentMultiplier", "BASE", nil, bit.band(ModFlag.Melee, ModFlag.Ailment)),
		},
		["ancestral_slam_interval_duration"] = {
			mod("FistOfWarCooldown", "BASE", nil),
			div = 1000,
		},
		["ancestral_slam_stun_threshold_reduction_+%"] = {
			mod("EnemyStunThreshold", "INC", nil, ModFlag.Attack)
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportFortify"] = {
	name = "SupportFortify",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Melee, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Triggered, },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_fortify_melee_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Melee),
		},
		["support_fortify_ailment_damage_+%_final_from_melee_hits"] = {
			mod("Damage", "MORE", nil, bit.bor(ModFlag.MeleeHit, ModFlag.Ailment)),
		},
		["fortify_effect_+%"] = {
			mod("FortifyEffectOnSelf", "INC", nil)
		},
		["overwhelm_%_physical_damage_reduction_while_fortified"] = {
			mod("EnemyPhysicalDamageReduction", "BASE", nil, 0, KeywordFlag.Hit, { type = "Condition", var = "Fortify"}),
			mult = -1,
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportGenerosity"] = {
	name = "SupportGenerosity",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Aura, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Totem, SkillType.AppliesCurse, SkillType.AuraDebuff, },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["aura_cannot_affect_self"] = {
			skill("auraCannotAffectSelf", true),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportGenerosityPlus"] = {
	name = "SupportGenerosityPlus",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Aura, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Totem, SkillType.AppliesCurse, SkillType.AuraDebuff, },
	plusVersionOf = "SupportGenerosity",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["aura_cannot_affect_self"] = {
			skill("auraCannotAffectSelf", true),
		},
		["supported_aura_skill_gem_level_+"] = {
			mod("SupportedGemProperty", "LIST", { keyword = "active_skill", key = "level", value = nil }, 0, 0, { type = "SkillType", skillType = SkillType.Aura }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportIncreasedDuration"] = {
	name = "SupportIncreasedDuration",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Duration, SkillType.Type55, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportIronGrip"] = {
	name = "SupportIronGrip",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.ProjectileAttack, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportIronWill"] = {
	name = "SupportIronWill",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Type59, SkillType.Type66, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportItemQuantity"] = {
	name = "SupportItemQuantity",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, SkillType.DamageOverTime, SkillType.Type112, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportKnockback"] = {
	name = "SupportKnockback",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportReducedDuration"] = {
	name = "SupportReducedDuration",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Duration, SkillType.Type55, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_reduced_duration_skill_effect_duration_+%_final"] = {
			mod("Duration", "MORE", nil),
		},
		["support_reduced_duration_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportLifeGainOnHit"] = {
	name = "SupportLifeGainOnHit",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Attack, SkillType.AnimateWeapon, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportLifeLeech"] = {
	name = "SupportLifeLeech",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["maximum_life_leech_amount_per_leech_+%"] = {
			mod("MaxLifeLeechRate", "INC", nil)
		}
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportLifetap"] = {
	name = "SupportLifetap",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { },
	addSkillTypes = { SkillType.Duration, },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_lifetap_damage_+%_final_while_buffed"] = {
			mod("Damage", "MORE", nil, 0, 0, { type = "Condition", var = "Lifetap" }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportMaim"] = {
	name = "SupportMaim",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Attack, SkillType.Maims, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_maim_chance_physical_damage_+%_final"] = {
			mod("PhysicalDamage", "MORE", nil),
		},
		["support_maimed_enemies_physical_damage_taken_+%"] = {
			mod("PhysicalDamageTaken", "INC", nil, 0, 0, { type = "GlobalEffect", effectType = "Debuff", effectName = "Maim" }, { type = "Condition", var = "Maimed" }),
		},
		["chance_to_bleed_on_hit_%_vs_maimed"] = {
			mod("BleedChance", "BASE", nil, 0, 0, { type = "ActorCondition", actor = "enemy", var = "Maimed" })
		}
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportMeleePhysicalDamage"] = {
	name = "SupportMeleePhysicalDamage",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Melee, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_melee_physical_damage_+%_final"] = {
			mod("PhysicalDamage", "MORE", nil, ModFlag.Melee),
		},
		["support_melee_physical_damage_poison_and_bleeding_damage_+%_final_from_melee_hits"] = {
			mod("Damage", "MORE", nil, ModFlag.MeleeHit, bit.bor(KeywordFlag.Bleed, KeywordFlag.Poison)),
		},
		["support_melee_physical_damage_attack_speed_+%_final"] = {
			mod("Speed", "MORE", nil, ModFlag.Attack),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportMeleePhysicalDamagePlus"] = {
	name = "SupportMeleePhysicalDamagePlus",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Melee, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	plusVersionOf = "SupportMeleePhysicalDamage",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_melee_physical_damage_+%_final"] = {
			mod("PhysicalDamage", "MORE", nil, ModFlag.Melee),
		},
		["support_melee_physical_damage_poison_and_bleeding_damage_+%_final_from_melee_hits"] = {
			mod("Damage", "MORE", nil, ModFlag.MeleeHit, bit.bor(KeywordFlag.Bleed, KeywordFlag.Poison)),
		},
		["support_melee_physical_damage_attack_speed_+%_final"] = {
			mod("Speed", "MORE", nil, ModFlag.Attack),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportMeleeSplash"] = {
	name = "SupportMeleeSplash",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.MeleeSingleTarget, },
	addSkillTypes = { SkillType.Area, },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportMeleeSplashPlus"] = {
	name = "SupportMeleeSplashPlus",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.MeleeSingleTarget, },
	addSkillTypes = { SkillType.Area, },
	excludeSkillTypes = { },
	plusVersionOf = "SupportMeleeSplash",
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportMultistrike"] = {
	name = "SupportMultistrike",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.AttackCanRepeat, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Vaal, SkillType.CreatesMirageWarrior, SkillType.CreatesMinion, SkillType.NOT, SkillType.AND, },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["multistrike_damage_+%_final_on_first_repeat"] = {
			mod("Damage", "MORE", nil, ModFlag.Attack),
		},
		["support_multiple_attack_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Attack),
		},
		["support_multiple_attacks_melee_attack_speed_+%_final"] = {
			mod("Speed", "MORE", nil, bit.bor(ModFlag.Attack, ModFlag.Melee)),
		},
		["multistrike_area_of_effect_+%_per_repeat"] = {
			mod("AreaOfEffect", "INC", nil)
		}
	},
	baseMods = {
		flag("SupportedByMultistrike"),
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportMultistrikePlus"] = {
	name = "SupportMultistrikePlus",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.AttackCanRepeat, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Vaal, SkillType.CreatesMirageWarrior, SkillType.CreatesMinion, SkillType.NOT, SkillType.AND, },
	plusVersionOf = "SupportMultistrike",
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["multistrike_damage_+%_final_on_third_repeat"] = {
			mod("Damage", "MORE", nil, ModFlag.Attack),
			div = 2,
		},
		["support_multiple_attack_damage_+%_final"] = {
			mod("Damage", "MORE", nil, ModFlag.Attack),
		},
		["support_multiple_attacks_melee_attack_speed_+%_final"] = {
			mod("Speed", "MORE", nil, bit.bor(ModFlag.Attack, ModFlag.Melee)),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportMultiTotem"] = {
	name = "SupportMultiTotem",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Totem, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_additional_totem_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportPulverise"] = {
	name = "SupportPulverise",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Melee, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_pulverise_melee_area_damage_+%_final"] = {
			mod("Damage", "MORE", nil, bit.bor(ModFlag.Melee, ModFlag.Area)),
		},
		["support_pulverise_attack_speed_+%_final"] = {
			mod("Speed", "MORE", nil, ModFlag.Attack),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportRage"] = {
	name = "SupportRage",
	hidden = true,
	color = 1,
	baseEffectiveness = 0.18000000715256,
	incrementalEffectiveness = 0.035000000149012,
	support = true,
	requireSkillTypes = { SkillType.Melee, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_rage_gain_rage_on_melee_hit_cooldown_ms"] = {
			flag("Condition:CanGainRage", { type = "GlobalEffect", effectType = "Buff" } ),
			mod("Dummy", "DUMMY", 1, 0, 0, { type = "Condition", var = "CanGainRage" }),
		},
		["attack_minimum_added_physical_damage_with_at_least_10_rage"] = {
			mod("PhysicalMin", "BASE", nil, bit.bor(ModFlag.Attack, ModFlag.Weapon), 0, { type = "MultiplierThreshold", var = "Rage", threshold = 10 })
		},
		["attack_maximum_added_physical_damage_with_at_least_10_rage"] = {
			mod("PhysicalMax", "BASE", nil, bit.bor(ModFlag.Attack, ModFlag.Weapon), 0, { type = "MultiplierThreshold", var = "Rage", threshold = 10 })
		},
		["attack_minimum_added_physical_damage_per_10_rage"] = {
			mod("PhysicalMin", "BASE", nil, bit.bor(ModFlag.Attack, ModFlag.Weapon), 0, { type = "Multiplier", var = "Rage", div = 10 })
		},
		["attack_maximum_added_physical_damage_per_10_rage"] = {
			mod("PhysicalMax", "BASE", nil, bit.bor(ModFlag.Attack, ModFlag.Weapon), 0, { type = "Multiplier", var = "Rage", div = 10 })
		},
		["attack_speed_+%_with_atleast_20_rage"] = {
			mod("Speed", "INC", nil, ModFlag.Attack, 0, { type = "MultiplierThreshold", var = "Rage", threshold = 20 })
		}
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportRangedAttackTotem"] = {
	name = "SupportRangedAttackTotem",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.ProjectileAttack, SkillType.SkillCanTotem, SkillType.AND, },
	addSkillTypes = { SkillType.SkillCanTrap, SkillType.SkillCanMine, SkillType.Totem, SkillType.ManaCostPercent, },
	excludeSkillTypes = { SkillType.TriggeredGrantedSkill, },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	addFlags = {
		totem = true,
		ballista = true,
	},
	statMap = {
		["support_attack_totem_attack_speed_+%_final"] = {
			mod("Speed", "MORE", nil, ModFlag.Attack),
		},
		["support_totem_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportReducedMana"] = {
	name = "SupportReducedMana",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["elemental_damage_+%_final_per_righteous_charge"] = {
			mod("ElementalDamage", "MORE", nil, 0, 0, { type = "Multiplier", var = "InspirationCharge" }),
		},
		["critical_strike_chance_+%_per_righteous_charge"] = {
			mod("CritChance", "INC", nil, 0, 0, { type = "Multiplier", var = "InspirationCharge" }),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportRuthless"] = {
	name = "SupportRuthless",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.MeleeSingleTarget, SkillType.SlamSkill, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Channelled, SkillType.Type65, },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["support_ruthless_big_hit_stun_base_duration_override_ms"] = {
			skill("baseStunDuration", nil),
			div = 1000,
		},
		["support_ruthless_big_hit_max_count"] = {
			mod("RuthlessBlowMaxCount", "BASE", nil),
		},
		["support_ruthless_big_hit_damage_+%_final"] = {
			mod("RuthlessBlowMultiplier", "BASE", nil, ModFlag.Melee),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBluntWeapon"] = {
	name = "SupportBluntWeapon",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Melee, },
	addSkillTypes = { },
	excludeSkillTypes = { SkillType.Triggered, SkillType.CreatesMinion, SkillType.Totem, },
	ignoreMinionTypes = true,
	weaponTypes = {
		["Two Handed Mace"] = true,
		["Staff"] = true,
		["One Handed Mace"] = true,
		["Sceptre"] = true,
	},
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportBluntWeaponShockwave"] = {
	name = "Shockwave",
	hidden = true,
	color = 1,
	description = "Deals attack damage in an area.",
	skillTypes = { [SkillType.Attack] = true, [SkillType.Area] = true, [SkillType.Hit] = true, [SkillType.Triggerable] = true, [SkillType.Triggered] = true, [SkillType.Melee] = true, },
	weaponTypes = {
		["Two Handed Mace"] = true,
		["Staff"] = true,
		["One Handed Mace"] = true,
		["Sceptre"] = true,
	},
	statDescriptionScope = "skill_stat_descriptions",
	castTime = 1,
	preDamageFunc = function(activeSkill, output)
		activeSkill.skillData.hitTimeOverride = output.Cooldown
	end,
	baseFlags = {
		attack = true,
		melee = true,
		area = true,
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportSpellTotem"] = {
	name = "SupportSpellTotem",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Spell, SkillType.SkillCanTotem, SkillType.AND, },
	addSkillTypes = { SkillType.SkillCanTrap, SkillType.SkillCanMine, SkillType.Totem, SkillType.ManaCostPercent, },
	excludeSkillTypes = { SkillType.TriggeredGrantedSkill, },
	ignoreMinionTypes = true,
	statDescriptionScope = "gem_stat_descriptions",
	addFlags = {
		totem = true,
	},
	statMap = {
		["support_spell_totem_cast_speed_+%_final"] = {
			mod("Speed", "MORE", nil, ModFlag.Cast),
		},
		["support_totem_damage_+%_final"] = {
			mod("Damage", "MORE", nil),
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportStun"] = {
	name = "SupportStun",
	hidden = true,
	color = 1,
	baseEffectiveness = 0,
	support = true,
	requireSkillTypes = { SkillType.Hit, SkillType.Attack, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}
skills["SupportUrgentOrders"] = {
	name = "SupportUrgentOrders",
	hidden = true,
	color = 1,
	support = true,
	requireSkillTypes = { SkillType.Warcry, },
	addSkillTypes = { },
	excludeSkillTypes = { },
	statDescriptionScope = "gem_stat_descriptions",
	statMap = {
		["base_cooldown_modifier_ms"] = {
			mod("CooldownRecovery", "BASE", nil),
			div = 1000,
		},
	},
	baseMods = {
	},
	qualityStats = {
	},
	stats = {
	},
	levels = {
	},
}